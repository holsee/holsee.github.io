<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mooc | holsee]]></title>
  <link href="http://holsee.github.io/blog/categories/mooc/atom.xml" rel="self"/>
  <link href="http://holsee.github.io/"/>
  <updated>2015-03-08T12:30:38+00:00</updated>
  <id>http://holsee.github.io/</id>
  <author>
    <name><![CDATA[holsee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Devlog: Functional Programming Principles in Scala]]></title>
    <link href="http://holsee.github.io/p/devlog-functional-programming-principles-in-scala/"/>
    <updated>2014-07-16T10:45:00+01:00</updated>
    <id>http://holsee.github.io/p/devlog-functional-programming-principles-in-scala</id>
    <content type="html"><![CDATA[<p>{% img /images/certs/coursera_progfun.png %}</p>

<p><a href="https://www.coursera.org/course/reactive">Coursera &ndash; Principles of Reactive Programming</a></p>

<h3>About the Course</h3>

<p>This course introduces the cornerstones of functional programming using the Scala programming language. Functional programming has become more and more popular in recent years because it promotes code that’s safe, concise, and elegant. Furthermore, functional programming makes it easier to write parallel code for today’s and tomorrow’s multiprocessors by replacing mutable variables and loops with powerful ways to define and compose functions.</p>

<p>Scala is a language that fuses functional and object-oriented programming in a practical package. It interoperates seamlessly with Java and its tools. Scala is now used in a rapidly increasing number of open source projects and companies. It provides the core infrastructure for sites such as Twitter, LinkedIn, Foursquare, Tumblr, and Klout.</p>

<p>In this course you will discover the elements of the functional programming style and learn how to apply them usefully in your daily programming tasks. You will also develop a solid foundation for reasoning about functional programs, by touching upon proofs of invariants and the tracing of execution symbolically.</p>

<p>The course is hands on; most units introduce short programs that serve as illustrations of important concepts and invite you to play with them, modifying and improving them. The course is complemented by a series of assignments, most of which are also programming projects.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Devlog: Principles of Reactive Programming]]></title>
    <link href="http://holsee.github.io/p/devlog-principles-of-reactive-programming/"/>
    <updated>2014-01-21T09:45:00+00:00</updated>
    <id>http://holsee.github.io/p/devlog-principles-of-reactive-programming</id>
    <content type="html"><![CDATA[<p>{% img /images/certs/coursera_prp.png %}</p>

<p><a href="https://www.coursera.org/course/progfun">Coursera &ndash; Functional Programming Principles in Scala</a></p>

<h3>About the Course</h3>

<p>This is a follow-on for the Coursera class “Principles of Functional Programming in Scala”, which so far had more than 100’000 inscriptions over two iterations of the course, with some of the highest completion rates of any massive open online course worldwide.</p>

<p>The aim of the second course is to teach the principles of reactive programming. Reactive programming is an emerging discipline which combines concurrency and event-based and asynchronous systems. It is essential for writing any kind of web-service or distributed system and is also at the core of many high-performance concurrent systems. Reactive programming can be seen as a natural extension of higher-order functional programming to concurrent systems that deal with distributed state by coordinating and orchestrating asynchronous data streams exchanged by actors.</p>

<p>In this course you will discover key elements for writing reactive programs in a composable way. You will find out how to apply these building blocks in the construction of event-driven systems that are scalable and resilient.</p>

<p>The course is hands on; most units introduce short programs that serve as illustrations of important concepts and invite you to play with them, modifying and improving them. The course is complemented by a series of assignments, which are also programming projects.</p>
]]></content>
  </entry>
  
</feed>
